{"version":3,"sources":["./src/app/core/services/auth/auth.service.ts","./src/app/features/auth/auth-routing.module.ts","./src/app/features/auth/auth.module.ts","./src/app/features/auth/auth.component.ts","./src/app/features/auth/auth.component.html","./src/app/features/auth/login/login.component.ts","./src/app/features/auth/login/login.component.html"],"names":[],"mappings":"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","file":"features-auth-auth-module.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, delay } from 'rxjs/operators';\r\nimport { LoginModel } from '../../models/auth/login.model';\r\nimport { SessionService } from '../session.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private session: SessionService\r\n  ) { }\r\n\r\n  login(model: LoginModel): Observable<string> {\r\n    // TODO Implements\r\n    return of(\"FAKE TOKEN\").pipe(delay(1000));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthComponent } from './auth.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [{ path: '', component: AuthComponent, children: [\r\n  { path: 'login', component: LoginComponent },\r\n] }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { AuthComponent } from './auth.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AuthComponent, LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AuthRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/core/services/auth/auth.service';\r\nimport { SessionService } from 'src/app/core/services/session.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  fg: FormGroup;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private session: SessionService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.fg = new FormGroup({\r\n      username: new FormControl(null, [Validators.required]),\r\n      password: new FormControl(null, [Validators.required])\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if(this.fg.valid) {\r\n      this.authService.login(this.fg.value).subscribe(data => {\r\n        this.session.start(data);\r\n        // display toast\r\n        this.router.navigateByUrl('/admin/dashboard')\r\n      }, error => {});\r\n    }\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"fg\" (ngSubmit)=\"submit()\">\r\n    <input type=\"text\" formControlName=\"username\">\r\n    <input type=\"password\" formControlName=\"password\">\r\n    <button>Login</button>\r\n</form>\r\n"],"sourceRoot":"webpack:///"}